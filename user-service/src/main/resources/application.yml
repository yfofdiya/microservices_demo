spring:
  datasource:
    url: jdbc:mysql://localhost:3306/microservice_user_data
    username: root
    password:
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect

  # Application Name
  application:
    name: USER-SERVICE

  # For Config Server
  config:
    import: optional:configserver:http://localhost:8084

  # Security configuration
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: https://dev-27631982.okta.com/oauth2/default
      client:
        registration:
          my-client:
            provider: okta
            authorization-grant-type: client_credentials
            scope: internal
            client-id:
            client-secret:
        provider:
          okta:
            issuer-uri: https://dev-27631982.okta.com/oauth2/default

server:
  port: 8081

# For Health Checks
management:
  health:
    circuitbreakers:
      enabled: true
  endpoints:
    exposure:
      include: health
  endpoint:
    health:
      show-details: always

# For Resilience 4J
resilience4j:
  circuitbreaker:
    instances:
      hotelsCircuitBreaker:
        registerHealthIndicator: true
        eventConsumerBufferSize: 10
        failureRateThreshold: 50
        minimumNumberOfCalls: 5
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 6s
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowSize: 10
        slidingWindowType: COUNT_BASED

# Octa Configuration for API Gateway
okta:
  oauth2:
    issuer: https://dev-27631982.okta.com/oauth2/default
    audience: api://default